name: Test Terraform

on:
  pull_request:
    branches:
      - "main"

env:
  TF_VERSION: 1.0.0
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  KUBERNETES_CLUSTER_NAME: ${{ vars.KUBERNETES_CLUSTER_NAME }}

jobs:
  terraform_pipeline:
    name: Complete Terraform Pipeline
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código-fonte
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.TF_VERSION }}"

      # 3. Checagem de formatação do Terraform
      - name: Terraform Format Check
        run: terraform -chdir=src/infrastructure/terraform fmt -recursive

      # 4. Inicialização do Terraform
      - name: Terraform Init
        run: terraform -chdir=src/infrastructure/terraform init

      # 5. Validação do Terraform
      - name: Terraform Validate
        run: terraform -chdir=src/infrastructure/terraform validate

      # 6. Configuração de credenciais AWS
      - name: AWS Connect
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      # 7. Planejamento do Terraform
      - name: Terraform Plan
        run: terraform -chdir=src/infrastructure/terraform plan -out=tfplan
